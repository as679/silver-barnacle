---
- name: Avi Controller | oVirt | Metadata deploy | Lookup the storage domain
  uri:
    url: "https://{{ inventory_hostname }}/ovirt-engine/api/storagedomains?case_sensitive=true&max=1&search=name={{ iso_storage_domain }}"
    headers:
      Version: 4
      Accept: application/json
      Authorization: "Bearer {{ con_ovirt_api.json.access_token}}"
    validate_certs: false
  register: con_ovirt_storage_domain_iso
  failed_when: "con_ovirt_storage_domain_iso.status|int != 200"
  delegate_to: localhost
- name: Avi Controller | oVirt | Metadata deploy | Find the correct storage domain
  set_fact:
    iso_storage_domain_upload: "{{ storage_domain }}"
  when: storage_domain.name ==  iso_storage_domain
  with_items: "{{ con_ovirt_storage_domain_iso.json.storage_domain }}"
  loop_control:
    loop_var: storage_domain
- name: Avi Controller | oVirt | Metadata deploy | Create the temporary directory
  tempfile:
    state: directory
    prefix: "{{ tmp_prefix }}"
    suffix: "{{ tmp_suffix }}"
  register: tmp_dir
  delegate_to: localhost
- name: Avi Controller | oVirt | Metadata deploy | Lookup the current disks
  uri:
    url: "https://{{ inventory_hostname }}/ovirt-engine/api/disks"
    headers:
      Version: 4
      Accept: application/json
      Authorization: "Bearer {{ con_ovirt_api.json.access_token}}"
    validate_certs: false
  register: con_ovirt_disks_iso
  failed_when: "con_ovirt_storage_domain_iso.status|int != 200"
  delegate_to: localhost

- name: Avi Controller | oVirt | Include the ISO upload loop
  include: metadata_deploy_loop.yml
  with_items: "{{ controllers }}"
  loop_control:
    loop_var: controller

- name: Avi Controller | oVirt | Metadata deploy | Remove the temporary directory
  file:
    path: "{{ tmp_dir.path }}"
    state: absent
  when: clean_up
  delegate_to: localhost
